<!DOCTYPE html>
<!-- saved from url=(0037)http://bootstrapk.com/examples/theme/ -->
<html lang="en">
<head>
	<!-- header -->
<% include ../head.ejs %>

</head>
<body>
<!-- 테스트용 우편번호 스크립트 -->
<script src="//dmaps.daum.net/map_js_init/postcode.v2.js"></script>
<script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=6b40b52d3e57a3ff0b7867e0bfb88094&libraries=services"></script>
<!-- ---------------------------------------------------------------- -->

<script>
	if(!<%=login%>){
		alert('로그인이 필요합니다.');
		window.close();
	}
	
	
    function sample4_execDaumPostcode() {
        new daum.Postcode({
            oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 도로명 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var fullRoadAddr = data.roadAddress; // 도로명 주소 변수
                var extraRoadAddr = ''; // 도로명 조합형 주소 변수

                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                    extraRoadAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if(data.buildingName !== '' && data.apartment === 'Y'){
                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
                // 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                if(extraRoadAddr !== ''){
                    extraRoadAddr = ' (' + extraRoadAddr + ')';
                }
                // 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.
                if(fullRoadAddr !== ''){
                    fullRoadAddr += extraRoadAddr;
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('sample4_postcode').value = data.zonecode; //5자리 새우편번호 사용
                document.getElementById('sample4_roadAddress').value = fullRoadAddr;
                document.getElementById('sample4_jibunAddress').value = data.jibunAddress;

                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
                if(data.autoRoadAddress) {
                    //예상되는 도로명 주소에 조합형 주소를 추가한다.
                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                    document.getElementById('guide').innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';

                } else if(data.autoJibunAddress) {
                    var expJibunAddr = data.autoJibunAddress;
                    document.getElementById('guide').innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';

                } else {
                    document.getElementById('guide').innerHTML = '';
                }
                var geocoder = new daum.maps.services.Geocoder();
                geocoder.addressSearch(data.address, function(results, status) {
                	if(status === daum.maps.services.Status.OK){
                		  var result = results[0];
                		document.getElementById('product_send_lat').value =result.y;
                		document.getElementById('product_send_lon').value =result.x;
                		
                	}
                });
            }
        }).open();
       
    }
    function sample5_execDaumPostcode() {
        new daum.Postcode({
            oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 도로명 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var fullRoadAddr = data.roadAddress; // 도로명 주소 변수
                var extraRoadAddr = ''; // 도로명 조합형 주소 변수

                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                    extraRoadAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if(data.buildingName !== '' && data.apartment === 'Y'){
                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
                // 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                if(extraRoadAddr !== ''){
                    extraRoadAddr = ' (' + extraRoadAddr + ')';
                }
                // 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.
                if(fullRoadAddr !== ''){
                    fullRoadAddr += extraRoadAddr;
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('sample5_postcode').value = data.zonecode; //5자리 새우편번호 사용
                document.getElementById('sample5_roadAddress').value = fullRoadAddr;
                document.getElementById('sample5_jibunAddress').value = data.jibunAddress;

                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
                if(data.autoRoadAddress) {
                    //예상되는 도로명 주소에 조합형 주소를 추가한다.
                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                    document.getElementById('guide').innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';

                } else if(data.autoJibunAddress) {
                    var expJibunAddr = data.autoJibunAddress;
                    document.getElementById('guide').innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';

                } else {
                    document.getElementById('guide').innerHTML = '';
                }
                var geocoder = new daum.maps.services.Geocoder();
                geocoder.addressSearch(data.address, function(results, status) {
                	if(status === daum.maps.services.Status.OK){
                		  var result = results[0];
                		document.getElementById('product_receiver_lat').value =result.y;
                		document.getElementById('product_receiver_lon').value =result.x;
                		
                	}
                });
            }
        }).open();
       
    }
	
</script>
<div align="center">
<form method="post" action="/trade/upload">
	<table border="1">
		<tr>
			<td>상품 이름</td>
			<td><input type="text" name="product_id"></td>
		</tr>
		<tr>
			<td>청구비용</td>
			<td><input type="text" name="product_cost"></td>
		</tr>
		<tr>
			<td>상품 사이즈</td>
			<td><input type="text" name="product_size"></td>
		</tr>
		<tr>
			<td>상품 무개</td>
			<td><input type="text" name="product_weight"></td>
		</tr>
		<tr>
			<td>메모</td>
			<td><input type="text" name="product_memo"></td>
		</tr>
	</table>
	
	<table border=1>
		<tr>
			<td>배송인</td>
			<td><input type="text" name="product_sender_Name"></td>
		</tr>
		<tr>
			<td>배송인 연락처</td>
			<td><input type="text" name="product_sender_Phone"></td>
		</tr>
		<tr>
			<td colspan="2">상품 픽업 위치 실주소 
				<table>
					
					<tr>
						<td><input type="button" onclick="sample4_execDaumPostcode()" value="우편번호 찾기"></td>
						<td><input type="text" id="sample4_postcode" placeholder="우편번호" disabled="disabled"></td>
					</tr>
					<tr>
						<td>도로명주소</td>
						<td><input type="text" id="sample4_roadAddress" name="product_send_location" placeholder="도로명주소"></td>
					</tr>
					<tr>
						<td>도로명주소</td>
						<td><input type="text" id="sample4_jibunAddress" placeholder="지번주소" disabled="disabled"></td>
					</tr>
					<tr>
						<td>상세주소</td>
						<td><input type="text" name="product_send_location2"></td>
					</tr>
				</table>
				<span id="guide" style="color:#999"></span>
			</td>
		</tr>
		<tr>
			<td>상품 픽업 희망 시간</td>
			<td><input type="text" name="product_send_time"></td>
		</tr>
		<tr>
			<td>수령인</td>
			<td><input type="text" name="product_receiver_name"></td>
		</tr>
		<tr>
			<td>수령인 연락처</td>
			<td><input type="text" name="product_receiver_Phone"></td>
		</tr>
		<tr>
			<td colspan="2">수령지 실주소
				<table>
					
					<tr>
						<td><input type="button" onclick="sample5_execDaumPostcode()" value="우편번호 찾기"></td>
						<td><input type="text" id="sample5_postcode" placeholder="우편번호" disabled="disabled"></td>
					</tr>
					<tr>
						<td>도로명주소</td>
						<td><input type="text" id="sample5_roadAddress" name="product_receiver_location" placeholder="도로명주소"></td>
					</tr>
					<tr>
						<td>도로명주소</td>
						<td><input type="text" id="sample5_jibunAddress" placeholder="지번주소" disabled="disabled"></td>
					</tr>
					<tr>
						<td>상세주소</td>
						<td><input type="text" name="product_receiver_location2"></td>
					</tr>
				</table>
				<span id="guide" style="color:#999"></span>
			</td>
		</tr>
		
		<tr>
			<td>수령 희망 시간</td>
			<td><input type="text" name="product_receiver_time"></td>
		</tr>
		
	</table>
	<input type="hidden" id="product_send_lat" name="product_send_lat">
	<input type="hidden" id="product_send_lon" name="product_send_lon">
	<input type="hidden" id="product_receiver_lat" name="product_receiver_lat">
	<input type="hidden" id="product_receiver_lon" name="product_receiver_lon">
	<input type="submit">
	</form>
	</div>
</body>